@startuml sequence-importCSV
skinparam sequenceReferenceBackgroundColor #ffffffcc
actor User
participant メインスレッド
participant サブスレッド
database データCSV

==CSVテンプレートのダウンロード==
User -> メインスレッド : 新規追加プルダウン押下
メインスレッド -> User : プルダウンリスト表示\n・1名追加\n・CSV読み込み
User -> メインスレッド : CSV読み込みボタン押下
メインスレッド -> User : CSV読み込みダイアログ表示
User -> メインスレッド : テンプレートダウンロードボタン押下


メインスレッド -> User : 画面要素をすべて操作不可に
メインスレッド -> メインスレッド : ダウンロードフォルダ存在確認

alt ダウンロードフォルダがある場合
    メインスレッド -> メインスレッド : 存在確認 成功
    loop テンプレートのファイル名が決まるまで
        メインスレッド -> メインスレッド : 同名のテンプレートファイルがないか確認
        alt フォルダ内に同名のCSVファイルが存在する場合
            メインスレッド -> メインスレッド : ファイル名の末尾に連番(1)、(2)などを付与
        end
    end
    メインスレッド -> メインスレッド : ダウンロードフォルダに\n空のCSVファイルを生成
    メインスレッド -> メインスレッド : 空のCSVにヘッダーの内容を書き込む
    メインスレッド -> メインスレッド : 生成したCSVファイルを保存して閉じる
else ダウンロードフォルダがない場合
    メインスレッド -> メインスレッド : 存在確認 失敗
    メインスレッド -> User : CSV読み込みダイアログを閉じる
    メインスレッド -> User : エラーメッセージ表示
    User -> メインスレッド : ×ボタンでエラーメッセージを削除
end
メインスレッド -> User : 画面要素を操作可能に戻す


==CSV読み込み==
User -> メインスレッド : ファイル選択ボタン押下
メインスレッド -> User : ファイル選択ダイアログ表示
User -> メインスレッド : 読み込むファイルを選択し、\n「読み込む」ボタン押下

par メインスレッド：UIの制御
    メインスレッド -> User : CSV読み込みダイアログを閉じる
    メインスレッド -> User : 画面要素をすべて操作不可に
    メインスレッド -> User : 読み込み中メッセージ表示
else サブスレッド：CSV読み込みチェック

    ' 読み込みチェック
    メインスレッド -> サブスレッド : サブスレッド生成
    alt #ddffdd  CSVファイルではなかった場合
        サブスレッド -> サブスレッド : ファイル形式チェック 失敗
        サブスレッド -> メインスレッド : エラー内容を返す
    else CSVファイルだった場合
        サブスレッド -> サブスレッド : ファイル形式チェック 成功
        サブスレッド -> サブスレッド : 選択したCSVファイルのフォーマットチェック\n　・1行目の先頭…空白\n　・2行目の先頭…入力例\n　・3行目の先頭…↓ここから入力↓
        alt #aaeeaa  フォーマットが異なる場合
            サブスレッド -> サブスレッド : フォーマットチェック 失敗
            サブスレッド -> メインスレッド : エラー内容を返す
        else フォーマットが一致する場合
            サブスレッド -> サブスレッド : フォーマットチェック 成功
            loop 最終行がチェックされるまで
                サブスレッド -> サブスレッド : 行内の各項目に対してバリデーションチェック\nエラーの場合は、行番号・項目名・エラー内容を控える
                サブスレッド -> サブスレッド : 次の行に移る
            end
            alt #77dd77 バリエーションエラーを検出した場合
                サブスレッド -> サブスレッド : バリデーションチェック 失敗
                サブスレッド -> メインスレッド : エラー内容の一覧を返す\n（行番号・項目名・エラー内容）
            else すべてのレコードでバリデーションチェックが成功した場合
                サブスレッド -> サブスレッド : バリデーションチェック 成功
                サブスレッド -> メインスレッド : CSV読み込みチェック 成功
            end
        end
    end
    サブスレッド -> メインスレッド : サブスレッド 終了
end
メインスレッド -> User : 読み込み中メッセージ削除


alt 読み込みチェック失敗
    メインスレッド -> User : エラーメッセージ表示
    User -> メインスレッド : ×ボタンでエラーメッセージを削除
else 読み込みチェック成功
    メインスレッド -> User : 保存確認メッセージ表示\nex:まだ保存は完了していません。\n     下記の内容で保存してよろしいですか？\n     追加5名、更新2名
    User -> メインスレッド : 確定ボタンを押下

    ' 保存処理
    par #ddffdd メインスレッド：UIの制御
        メインスレッド -> User : 保存確認メッセージを削除
        メインスレッド -> User : 画面要素をすべて操作不可に
        メインスレッド -> User : 保存中メッセージ表示
    else サブスレッド：保存処理
        メインスレッド -> サブスレッド : サブスレッド生成
        サブスレッド -> データCSV : ロックを取得
        loop 読み込むCSVの最終行がデータCSVに書き込まれるまで
            サブスレッド -> データCSV : 1行ずつデータCSVに書き込む
            alt エラーが発生した場合
                サブスレッド -> メインスレッド : エラーを返してループを抜ける
            else 正常に書き込めた場合
                サブスレッド -> サブスレッド : 次の行に移る
            end
        end
        サブスレッド -> データCSV :ロックを解放
        alt すべて保存成功した場合
            サブスレッド -> メインスレッド : 保存処理 成功
        end
        サブスレッド -> メインスレッド : サブスレッド終了
    end
    alt #ddffdd すべて保存成功した場合
        メインスレッド -> メインスレッド : Listを更新
        メインスレッド -> User : 保存中メッセージを削除
        メインスレッド -> User : 保存完了メッセージを表示
        User -> メインスレッド : ×ボタンで保存完了メッセージを削除

    else 途中でエラーが発生した場合
        メインスレッド -> User : 保存中メッセージを削除
        メインスレッド -> User : エラーメッセージ表示
        User -> メインスレッド : ×ボタンでエラーメッセージを削除
    end
end
メインスレッド -> User : 完了メッセージ表示
User -> メインスレッド : ×ボタンで完了メッセージを消す
メインスレッド -> User : 画面要素を操作可能に戻す
@enduml