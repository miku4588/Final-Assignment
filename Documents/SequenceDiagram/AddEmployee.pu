@startuml addEmployee
actor User
participant メインスレッド
participant サブスレッド
Database CSVデータ

== 新規追加画面表示 ==
User -> メインスレッド : 新規追加プルダウン押下
メインスレッド -> User : プルダウンリスト表示\n・1名追加\n・CSV読み込み
User -> メインスレッド : 1名追加を押下
メインスレッド -> メインスレッド : 1名追加画面に遷移

== データ入力 ==
alt 入力して保存する場合
    User -> メインスレッド : 情報入力
    User -> メインスレッド : 保存ボタン押下

    == データ処理 ==
    par
        メインスレッド -> User : 画面要素をすべて操作不可に
        メインスレッド -> User : 「保存中です」表示
        メインスレッド-> サブスレッド : サブスレッド生成
        メインスレッド-> サブスレッド: バリデーションチェック
        alt チェックOK
            サブスレッド -> メインスレッド : バリデーションチェックOK
            メインスレッド -> サブスレッド : データ追加開始
            サブスレッド -> サブスレッド : ロックを取得
            サブスレッド -> CSVデータ : 新規データを追加
            CSVデータ -> サブスレッド : 処理結果を返す
            サブスレッド -> サブスレッド : ロックを解放
        else チェックNG
            サブスレッド -> メインスレッド : バリデーションチェックNG
            メインスレッド -> User : エラーメッセージ表示
        end
    end
    alt 追加成功
        サブスレッド -> メインスレッド : 追加成功
        メインスレッド-> メインスレッド:リスト更新
        メインスレッド-> サブスレッド : サブスレッドを削除
        メインスレッド -> User : 詳細画面に遷移
        メインスレッド -> User : 保存完了ポップアップ表示
        User -> メインスレッド : ✖ボタン押下
    else 追加失敗
        サブスレッド -> メインスレッド : 追加失敗
        メインスレッド -> User : エラーメッセージ表示
    end
else 保存せずに戻る場合
    User -> メインスレッド : 情報入力
    User -> メインスレッド : キャンセルボタン押下
    メインスレッド -> User : 破棄確認モーダル表示
    alt 「はい」ボタン押下
        User -> メインスレッド : 「はい」ボタン押下
        メインスレッド -> User : 一覧画面に遷移
        メインスレッド -> User : 「破棄を完了しました。」表示
        User -> メインスレッド : 「OK」ボタン押下
    else 「いいえ」ボタン押下
        User -> メインスレッド : 「いいえ」ボタン押下
        メインスレッド -> User : モーダルを閉じる（そのまま新規追加画面）
    end
end
@enduml
